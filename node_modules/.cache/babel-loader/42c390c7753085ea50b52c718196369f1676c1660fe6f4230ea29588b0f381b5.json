{"ast":null,"code":"var _jsxFileName = \"/Users/krissi/projects/theGame/src/NotPlayable.js\",\n  _s = $RefreshSig$();\nimport './NotPlayable.css';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotPlayable = ({\n  card,\n  mat\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // if(!card > mat[0]) setIsOpen(false)\n\n  useEffect(() => {\n    if (card <= mat[0]) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"not_playable\",\n    children: isOpen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(NotPlayable, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = NotPlayable;\nNotPlayable.propTypes = {\n  card: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([' '])]).isRequired,\n  mat: PropTypes.array\n};\nexport default NotPlayable;\nvar _c;\n$RefreshReg$(_c, \"NotPlayable\");","map":{"version":3,"names":["PropTypes","React","useEffect","useState","jsxDEV","_jsxDEV","NotPlayable","card","mat","_s","isOpen","setIsOpen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","oneOfType","number","oneOf","isRequired","array","$RefreshReg$"],"sources":["/Users/krissi/projects/theGame/src/NotPlayable.js"],"sourcesContent":["import './NotPlayable.css'\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react';\n\nconst NotPlayable = ({ card , mat}) => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    // if(!card > mat[0]) setIsOpen(false)\n    \n    useEffect(() => {\n        if(card <= mat[0]) {\n            setIsOpen(true)\n        } else {\n            setIsOpen(false)\n        }\n    })\n\n\n    return (\n        <div className=\"not_playable\">\n            {isOpen}\n        </div>\n    )\n}\n\nNotPlayable.propTypes = {\n    card: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.oneOf([' '])\n    ]).isRequired,\n    mat: PropTypes.array\n};\n\nexport default NotPlayable;"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAGC;AAAG,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE3C;;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAGK,IAAI,IAAIC,GAAG,CAAC,CAAC,CAAC,EAAE;MACfG,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACHA,SAAS,CAAC,KAAK,CAAC;IACpB;EACJ,CAAC,CAAC;EAGF,oBACIN,OAAA;IAAKO,SAAS,EAAC,cAAc;IAAAC,QAAA,EACxBH;EAAM;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAR,EAAA,CAnBKH,WAAW;AAAAY,EAAA,GAAXZ,WAAW;AAqBjBA,WAAW,CAACa,SAAS,GAAG;EACpBZ,IAAI,EAAEP,SAAS,CAACoB,SAAS,CAAC,CACtBpB,SAAS,CAACqB,MAAM,EAChBrB,SAAS,CAACsB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CACzB,CAAC,CAACC,UAAU;EACbf,GAAG,EAAER,SAAS,CAACwB;AACnB,CAAC;AAED,eAAelB,WAAW;AAAC,IAAAY,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}