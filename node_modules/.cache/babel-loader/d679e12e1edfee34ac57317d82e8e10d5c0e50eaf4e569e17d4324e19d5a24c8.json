{"ast":null,"code":"var _jsxFileName = \"/Users/krissi/projects/theGame/src/NotPlayable.js\",\n  _s = $RefreshSig$();\nimport './NotPlayable.css';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotPlayable = ({\n  card,\n  mat\n}) => {\n  _s();\n  console.log(card);\n  console.log(mat);\n  const [hideCard, setHideCard] = useState(false);\n  useEffect(() => {\n    if (card <= mat[0]) {\n      hideCard(false);\n    } else {\n      setIsOpen(true);\n    }\n  }, [card, mat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"not_playable\",\n    children: isOpen ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(NotPlayable, \"LLoTXmBX772Uin8xVlf6F5+kPiQ=\");\n_c = NotPlayable;\nNotPlayable.propTypes = {\n  card: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([' '])]).isRequired,\n  mat: PropTypes.array\n};\nexport default NotPlayable;\nvar _c;\n$RefreshReg$(_c, \"NotPlayable\");","map":{"version":3,"names":["PropTypes","React","useEffect","useState","jsxDEV","_jsxDEV","NotPlayable","card","mat","_s","console","log","hideCard","setHideCard","setIsOpen","className","children","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","oneOfType","number","oneOf","isRequired","array","$RefreshReg$"],"sources":["/Users/krissi/projects/theGame/src/NotPlayable.js"],"sourcesContent":["import './NotPlayable.css'\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react';\n\nconst NotPlayable = ({ card , mat}) => {\n    console.log(card)\n    console.log(mat)\n    const [hideCard, setHideCard] = useState(false)\n\n    useEffect(() => {\n        if(card <= mat[0]) {\n            hideCard(false)\n        } else {\n            setIsOpen(true)\n        }\n    }, [card, mat])\n\n\n    return (\n        <div className=\"not_playable\">\n            {isOpen ? (\n                <p></p> \n            ) : (\n                <p></p> \n            )}\n        </div>\n    )\n}\n\nNotPlayable.propTypes = {\n    card: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.oneOf([' '])\n    ]).isRequired,\n    mat: PropTypes.array\n};\n\nexport default NotPlayable;"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAGC;AAAG,CAAC,KAAK;EAAAC,EAAA;EACnCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjBG,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EAChB,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,IAAGK,IAAI,IAAIC,GAAG,CAAC,CAAC,CAAC,EAAE;MACfI,QAAQ,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACHE,SAAS,CAAC,IAAI,CAAC;IACnB;EACJ,CAAC,EAAE,CAACP,IAAI,EAAEC,GAAG,CAAC,CAAC;EAGf,oBACIH,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,EACxBC,MAAM,gBACHZ,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEPhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAvBKH,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AAyBjBA,WAAW,CAACiB,SAAS,GAAG;EACpBhB,IAAI,EAAEP,SAAS,CAACwB,SAAS,CAAC,CACtBxB,SAAS,CAACyB,MAAM,EAChBzB,SAAS,CAAC0B,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CACzB,CAAC,CAACC,UAAU;EACbnB,GAAG,EAAER,SAAS,CAAC4B;AACnB,CAAC;AAED,eAAetB,WAAW;AAAC,IAAAgB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}